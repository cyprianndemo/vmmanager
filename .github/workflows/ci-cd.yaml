name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Buildx (required for building multi-platform images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub using GitHub Secrets for security
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Cache Docker layers to speed up builds
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Step 5: Build and push Docker images to Docker Hub
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: your-dockerhub-username/systemapplication:latest, your-dockerhub-username/my-node-app:latest

    # Step 6: Set up Kubectl to deploy to Kubernetes
    - name: Set up Kubernetes
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Step 7: Deploy the application to Kubernetes using YAML configuration files
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f react-deployment.yaml
        kubectl apply -f react-service.yaml
        kubectl apply -f node-deployment.yaml
        kubectl apply -f node-service.yaml
